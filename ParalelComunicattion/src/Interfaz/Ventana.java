/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Analizadores.Lexico;
import Analizadores.Sintactico;
import Estructuras.Celda;
import Estructuras.Celda.enumColor;
import Estructuras.Coordenada;
import Estructuras.Panel;
import Instrucciones.Hilo;
import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import jnpout32.pPort;
import paralelcomunicattion.Comunicacion;

/**
 *
 * @author Grupo1
 */
public class Ventana extends javax.swing.JFrame {

    public static enumColor color = enumColor.NEGRO;
    LinkedList<Celda> coordenadas = new LinkedList<Celda>();
    
    
    /**
     *
     */
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents(); 
        this.jButton15.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        coorX = new javax.swing.JLabel();
        coorY = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 0, 51));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Color");

        jLabel2.setText("Mi color");

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Abrir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Guardar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Guardar como...");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel3.setText("Figuras");

        jButton8.setText("Cuadrado");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Círculo");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Triángulo");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Línea");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Estrella");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Imprimir");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Nuevo");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setText("X");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton15.setText("Continuar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setText("Estado");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("X");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Y");

        coorX.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        coorX.setText("0");

        coorY.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        coorY.setText("0");

        jButton17.setText("About");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Ayuda");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton17)
                        .addGap(18, 18, 18)
                        .addComponent(jButton18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton16)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addComponent(jLabel2)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jButton8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButton12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(coorX)))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coorY)
                                    .addComponent(jLabel6)))
                            .addComponent(jButton13)
                            .addComponent(jButton15))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton14)
                    .addComponent(jButton17)
                    .addComponent(jButton18))
                .addGap(7, 7, 7)
                .addComponent(jButton16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(245, 245, 245))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(coorX)
                                    .addComponent(coorY))
                                .addGap(34, 34, 34)
                                .addComponent(jButton13)
                                .addGap(18, 18, 18)
                                .addComponent(jButton15)))
                        .addContainerGap(52, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.jButton4.setBackground(Color.RED);
        this.color = enumColor.ROJO;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.jButton4.setBackground(Color.BLACK);
        this.color = enumColor.NEGRO;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.jButton4.setBackground(Color.BLUE);
        this.color = enumColor.AZUL;
    }//GEN-LAST:event_jButton3ActionPerformed
    
    Boolean val = false;
    public static int contador = 0;
    int rs = 0;
    //Imprimir
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        //Limpiar las variables
        coordenadas.clear();
        
        //Buscar puntos a imprimirº        
        int index = this.jTabbedPane1.getSelectedIndex();
        LinkedList<Celda> matriz = new LinkedList<Celda>();
        if(pestañas.size() != 0){
            for(int i = 0; i<pestañas.size(); i++){
                Panel panel = pestañas.get(i);
                if(panel.index == index){
                    matriz = panel.elementos;
                }
            }
            //Matriz para recibir solo los puntos de coordenadas
            for(Celda p: matriz){
                if(p!=null){
                    if(p.getEstado() == 1){
                        coordenadas.add(p);
                    }
                }            
            }
        }   
        
        this.jTextArea1.append("Se han encontrado: " + coordenadas.size() + " puntos para imprimir.\n");
        if(coordenadas.size() != 0){
            this.jButton13.setEnabled(false);
            this.jButton15.setEnabled(true);
        }
            
        
    }//GEN-LAST:event_jButton13ActionPerformed

    
    LinkedList<Panel> pestañas = new LinkedList<Panel>();
    int numpestañas = 0;
    //Botón para abrir documento
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser buscador = new JFileChooser();
        FileNameExtensionFilter docFilter = new FileNameExtensionFilter("draw", "DRAW");
        buscador.setFileFilter(docFilter);
        buscador.showOpenDialog(buscador);
        
        try{
            String path = buscador.getSelectedFile().getAbsolutePath();
            String ir = leer(path);
            
            String name = buscador.getSelectedFile().getName();
            Boolean band = false;
            //comprobar si ya fue abierto el archivo
            if(pestañas.size() != 0){
                for(int i=0; i<pestañas.size(); i++){
                    if(pestañas.get(i).nombre.equals(name)){
                        band = true;
                    }
                }
            }

            if(band){
                String var = "Archivo ya esta abierto";
                System.out.println(var);
                this.jTextArea1.setText(var);
            }else{
                //crear un panel
                Lexico lexico = new Lexico(new BufferedReader(new StringReader(ir)));
                Sintactico sintactico = new Sintactico(lexico);
                try{
                    LinkedList<Coordenada> lista;
                    sintactico.parse();
                    lista = sintactico.resultado;
                    //Crear un nuevo lienzo
                    
                    LinkedList<Celda> lienzo = new LinkedList<Celda>();
                    JPanel panel = new JPanel();
                    panel.setLayout(null);
                    
                    this.jTabbedPane1.addTab(name, panel);
                    int index = numpestañas;
                    numpestañas++;                    
                    
                    for(int i=0; i<16; i++){
                        for(int j=0; j<8; j++){
                            Celda celda = new Celda(j, i, 0, Celda.enumColor.AZUL, panel);
                            lienzo.add(celda);
                            for(Coordenada k : lista){
                                if(k != null){
                                    if(k.getX().equals(Integer.toString(j)) && k.getY().equals(Integer.toString(i))){
                                        System.out.println("coincidencia X: " + k.getX() + " Y:  " + k.getY() );                                    
                                        celda.setEstado(1);
                                        celda.boton.setText("1");
                                        celda.boton.setBackground(Color.BLUE);
                                    }
                                    
                                }
                            }                            
                        }
                    }
                    Panel panel_ = new Panel(panel, name, lienzo, index, ir, path);
                    pestañas.add(panel_);
                    
                }catch(Exception e){
                    String var = "Error al compilar archivo\n";
                    System.out.println(var);
                    this.jTextArea1.append(var);
                }
            }                                    
        }catch (Exception e){
            String var = "No se pudo abrir el archivo\n";
            System.out.println(var);
            this.jTextArea1.append(var);                    
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    //Cerrar
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        int index = this.jTabbedPane1.getSelectedIndex();
        if(pestañas.size() != 0){
            for(int i = 0; i<pestañas.size(); i++){
                Panel panel = pestañas.get(i);
                if(panel.index == index){
                    this.jTabbedPane1.remove(this.jTabbedPane1.getSelectedIndex());
                    pestañas.remove(panel.index);
                    numpestañas--;
                }                
            }
            for(int i = 0; i<pestañas.size(); i++){
                Panel panel = pestañas.get(i);
                panel.index = i;
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    //Nuevo
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        LinkedList<Celda> lienzo = new LinkedList<Celda>();
        JPanel panel = new JPanel();
        panel.setLayout(null);
        
        int c = this.jTabbedPane1.getTabCount();
        
        if(pestañas.size() != 0){
            for(int i=0; i<pestañas.size(); i++){
                if(pestañas.get(i).nombre.equals("Nuevo"+c)){
                    c++;
                }
            }
        }
        
        this.jTabbedPane1.addTab("Nuevo" + c, panel);
        int index = numpestañas;
        numpestañas++;                    

        for(int i=0; i<16; i++){
            for(int j=0; j<8; j++){
                Celda celda = new Celda(j, i, 0, Celda.enumColor.AZUL, panel);
                lienzo.add(celda);                
            }
        }
        Panel panel_ = new Panel(panel, "Nuevo", lienzo, index, "Vacio", "0");
        pestañas.add(panel_);
        
    }//GEN-LAST:event_jButton14ActionPerformed

    //Guardar
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int index = this.jTabbedPane1.getSelectedIndex();
        Panel panel = null;
        if(pestañas.size() != 0){
            for(int i = 0; i<pestañas.size(); i++){
                panel = pestañas.get(i);
                if(panel.index == index)
                    break;
            }
        }
        if(panel != null){
            if(panel.url.equals("0"))                
                panel.url = guardar();
            else{
                crearArchivo(obtenerContenido(), panel.url);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    //Guardar como...
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_jButton7ActionPerformed

    //Cuadrado
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String contenido = leer("src/Instrucciones/cuadrado.draw");
        insertarFigura(contenido);
        
    }//GEN-LAST:event_jButton8ActionPerformed

    //Circulo
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String contenido = leer("src/Instrucciones/circulo.draw");
        insertarFigura(contenido);
    }//GEN-LAST:event_jButton9ActionPerformed
    
    //Triangulo
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String contenido = leer("src/Instrucciones/triangulo.draw");
        insertarFigura(contenido);
    }//GEN-LAST:event_jButton10ActionPerformed

    //Linea
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String contenido = leer("src/Instrucciones/linea.draw");
        insertarFigura(contenido);
    }//GEN-LAST:event_jButton11ActionPerformed
    
    //Estrella
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String contenido = leer("src/Instrucciones/estrella.draw");
        insertarFigura(contenido);
    }//GEN-LAST:event_jButton12ActionPerformed

    //Continuar siguentes 3
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        try{
            this.jButton15.setEnabled(false);
            Comunicacion conexion = new Comunicacion();
            Hilo hilo = new Hilo();
            int x1, x2, x3, y1, y2, y3;
            int contenido = coordenadas.size();
            String cadena = "0";
        
            if(contenido != 0){
                hilo.start();
                if(contenido > 2){
                    x1 = coordenadas.get(0).getX();
                    x2 = coordenadas.get(1).getX();
                    x3 = coordenadas.get(2).getX();
                    y1 = coordenadas.get(0).getY();
                    y2 = coordenadas.get(1).getY();
                    y3 = coordenadas.get(2).getY();
                    coordenadas.remove(2);
                    coordenadas.remove(1);
                    coordenadas.remove(0);
                    cadena = cadena + conexion.convertir_binario(x1, y1);
                    cadena = cadena + conexion.convertir_binario(x2, y2);
                    cadena = cadena + conexion.convertir_binario(x3, y3) + "1";
                    this.jTextArea1.append("Imprimiendo: x="+x1+"y="+y1+" x="+x2+"y="+y2+" x="+x3+"y="+y3+"\n");
                    conexion.ejecutar_(cadena);
                    hilo.safeStop();
                    this.jButton15.setEnabled(true);
                }else if(contenido == 2){                
                    x1 = coordenadas.get(0).getX();
                    x2 = coordenadas.get(1).getX();
                    y1 = coordenadas.get(0).getY();
                    y2 = coordenadas.get(1).getY();
                    coordenadas.remove(1);
                    coordenadas.remove(0);
                    cadena = cadena + conexion.convertir_binario(x1, y1);
                    cadena = cadena + conexion.convertir_binario(x2, y2)+ "1";
                    this.jTextArea1.append("Imprimiendo: x="+x1+"y="+y1+" x="+x2+"y="+y2+"\n");
                    hilo.safeStop();
                    conexion.ejecutar_(cadena);
                    this.jButton15.setEnabled(true);
                }else if(contenido == 1){
                    x1 = coordenadas.get(0).getX();
                    y1 = coordenadas.get(0).getY();
                    coordenadas.remove(0);
                    cadena = cadena + conexion.convertir_binario(x1, y1)+ "1";
                    this.jTextArea1.append("Imprimiendo: x="+x1+"y="+y1+"\n");
                    conexion.ejecutar_(cadena);
                    hilo.safeStop();
                    this.jButton15.setEnabled(true);
                }
            }else{
                this.jTextArea1.append("Operación terminada no hay mas coordenadas"+"\n");
                this.jButton13.setEnabled(true);
            }
        }catch (Exception e){
            this.jButton15.setEnabled(true);
        }
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        About a = new About();
        a.show(true);
        this.show(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if(Desktop.isDesktopSupported()){
            try{
                File file = new File(new File("").getAbsolutePath()+"/src/Interfaz/help.pdf");
                Desktop.getDesktop().open(file);
                
            }catch(IOException e){
                
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    public void insertarFigura(String contenido){
        Lexico lexico = new Lexico(new BufferedReader(new StringReader(contenido)));
        Sintactico sintactico = new Sintactico(lexico);
        try{
            LinkedList<Coordenada> lista;
            sintactico.parse();
            lista = sintactico.resultado;
            //Crear un nuevo lienzo

            int index = this.jTabbedPane1.getSelectedIndex();
            
            LinkedList<Celda> celdas = new LinkedList<Celda>();
            Panel panel = null;
            if(pestañas.size() != 0){
                for(int i = 0; i<pestañas.size(); i++){
                    panel = pestañas.get(i);
                    if(panel.index == index)
                        break;
                }
            }
            if(panel != null){
                celdas = panel.elementos;
                for(Coordenada k : lista){                    
                    if(k != null){
                        for(Celda i : celdas){
                            if(k.getX().equals(Integer.toString(i.getX())) && k.getY().equals(Integer.toString(i.getY()))){                            
                                i.boton.setBackground(Color.BLACK);
                                i.boton.setText("1");
                                i.setEstado(1);
                                break;
                            }                                                    
                        }
                    }
                }
            }                                   
        }catch(Exception e){
            System.out.println("Error al compilar archivo " + e);
        }
    }
    
    public void crearArchivo(String contenido, String path){
        try{
            File archivo = new File(path);
            if(archivo.delete())
                System.out.println("El fichero ha sido borrado satisfactoriamente");
            else
                System.out.println("El fichero no puede ser borrado");
            
            FileWriter escribir = new FileWriter(archivo, true);            
            escribir.write(contenido);
            escribir.close();
        }catch (Exception e){
            System.out.println("Error al escribir fichero");
        }
    }
    
    public String guardar(){
        JFileChooser guardar = new JFileChooser();
        guardar.setApproveButtonText("Guardar como...");
        guardar.showSaveDialog(null);
        File archivo = new File(guardar.getSelectedFile() + ".draw");
        try{
            BufferedWriter salida = new BufferedWriter(new FileWriter(archivo));
            salida.write(obtenerContenido());
            salida.close();            
        }catch(Exception e){
            System.out.println("No se pudo guardar");
        }
        return archivo.getAbsolutePath();
    }
    
    public String obtenerContenido(){
        int index = this.jTabbedPane1.getSelectedIndex();
        String contenido = "{\n \"Coordenadas\":[\n";
        LinkedList<Celda> lista = new LinkedList<Celda>();
        if(pestañas.size() != 0){
            for(int i = 0; i<pestañas.size(); i++){
                Panel panel = pestañas.get(i);
                if(panel.index == index){
                    lista = panel.elementos;                    
                }
            }
        }
        int a = contar(lista);
        for(Celda i: lista){
            if(i != null){
                if(i.getEstado() == 1){
                    contenido = contenido + "{ \"x\": "+i.getX()+", \"y\": "+i.getY()+"}";
                    if(a == 1){
                        contenido = contenido + "\n";
                    }else{
                        contenido = contenido + ",\n";
                        a--;
                    }
                }

            }
        }
        if(a == 0){
            contenido = contenido + "{ \"x\": 16 , \"y\": 16}\n";
        }
        contenido = contenido + "\n]\n}";
        return contenido;
    }
    
    public int contar(LinkedList<Celda> lista){
        int c = 0;
        for(Celda p: lista){
            if(p.getEstado() == 1)
                c++;
        }
        return c;
    }
    
    public String leer(String path){
        String texto = "", lineas = "";
        try{
            BufferedReader contenido = new BufferedReader(new InputStreamReader(new FileInputStream(path), "UTF-8"));
            
            while((texto = contenido.readLine()) != null){
                lineas = lineas + texto + "\n";
            }
            
            return lineas;
        }catch (Exception e){
            return "";            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel coorX;
    public static javax.swing.JLabel coorY;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
